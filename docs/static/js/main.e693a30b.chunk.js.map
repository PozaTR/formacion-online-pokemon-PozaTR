{"version":3,"sources":["images/Pokemon-Logo.png","services/fetchSpecie.js","services/fetchPokemon.js","components/Search.js","components/PokemonTypesBackground.js","components/Pokemon.js","components/Pokemons.js","components/PokemonDetail.js","App.js","services/fetchPokemons.js","index.js"],"names":["module","exports","fetchSpecie","pokemonId","fetch","then","response","json","_fetchPokemon","fetchPokemon","Promise","all","responses","Search","props","getPokemon","className","htmlFor","id","type","name","onChange","pokemonTypesBackground","pokemonTypes","map","index","key","Pokemon","pokemon","isLoading","Fragment","PokemonTypesBackground","types","showType","src","sprites","front_shiny","alt","evolves_from_species","Pokemons","pokemons","findPokemon","pokemonsFilter","filter","myPokemon","toUpperCase","includes","to","PokemonDetail","Object","keys","length","abilities","weight","height","gender_rate","egg_groups","habitat","eggGroup","ability","App","state","pokemonDetail","bind","prevProps","this","location","pathname","getPageInfo","pokemonsArray","results","lastSlashPosition","url","slice","lastIndexOf","substring","setState","positionPokeId","event","currentTarget","value","logo","exact","path","render","RouterProps","match","React","Component","withRouter","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.e693a30b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Pokemon-Logo.34a9197f.png\";","const ENDPOINT  = 'https://pokeapi.co/api/v2/pokemon-species/';\n\nconst fetchSpecie = (pokemonId) => fetch( ENDPOINT + pokemonId ).then(response => response.json());\n\nexport { fetchSpecie }","import { fetchSpecie } from './fetchSpecie';\n\nconst ENDPOINT = 'https://pokeapi.co/api/v2/pokemon/';\n\nconst _fetchPokemon = (pokemonId) => fetch(ENDPOINT+pokemonId).then(response => response.json());\n\nconst fetchPokemon = (pokemonId) => Promise.all([\n    _fetchPokemon(pokemonId),\n    fetchSpecie(pokemonId)\n  ])\n  .then((responses) => {\n    const pokemonData = responses[0]\n    const specieData = responses[1]\n    return {\n      ...pokemonData,\n      ...specieData\n    }\n  })\n\nexport { fetchPokemon };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../styles/components/search.scss';\n\nconst Search = (props) => {\n  const { getPokemon } = props;\n  return (\n    <div className=\"search\" >\n      <label className=\"search__label\" htmlFor=\"name\">Filtra Pokemons por nombre</label>\n      <input className=\"search__input\" id=\"name\" type=\"text\" name=\"name\" onChange={getPokemon} ></input>\n    </div>\n  );\n}\n\nSearch.propTypes = {\n  getPokemon: PropTypes.func.isRequired,\n}\n\nexport default Search;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../styles/components/pokemonTypesBackground.scss';\n\nconst pokemonTypesBackground = (props) => {\n  const { pokemonTypes } = props\n\n  return(\n    <ul className=\"pokemon-types\">{pokemonTypes.map((type, index) => \n      <li className={`pokemon-types__type pokemon-types__type--${type.type.name}`} key={index}></li>\n    )}\n    </ul>\n  )\n}\n\npokemonTypesBackground.propTypes = {\n  pokemonTypes: PropTypes.arrayOf(PropTypes.object).isRequired,\n}\n\nexport default pokemonTypesBackground;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport PokemonTypesBackground from './PokemonTypesBackground';\nimport '../styles/components/pokemon.scss';\n\nconst Pokemon = (props) => {\n  const { pokemon, isLoading } = props;\n\n  return(\n    <div className=\"pokemon\">\n      { !isLoading\n        ? <React.Fragment>\n            <PokemonTypesBackground  pokemonTypes={pokemon.types} showType/>\n            <div className=\"pokemon__information\" >\n              <div className=\"pokemon__information__container\">\n                <img className=\"pokemon__image\" src={pokemon.sprites.front_shiny} alt={pokemon.name}/>\n                <p className=\"pokemon__name\">{pokemon.name}</p>\n                {pokemon.evolves_from_species ? (<p className=\"pokemon__evolution\" >{pokemon.evolves_from_species.name}</p>) : ''}\n                <ul className=\"pokemon__types\">\n                  {pokemon.types.map((type, index) => \n                    <li className=\"pokemon__type\" key={`type-${index}`}>{type.type.name}</li>\n                  )}\n                </ul>\n              </div>\n              <p className=\"pokemon__number\" >ID/{pokemon.id}</p>\n            </div>\n          </React.Fragment> \n        : <React.Fragment>\n            <div className=\"pokemon__information__container\">\n              <p className=\"pokemon__name\">{pokemon.name}</p>\n              <div className=\"pokemon__loader\"></div>\n            </div>\n          </React.Fragment>\n      }\n    </div>\n  )\n}\n\nPokemon.propTypes = {\n  pokemon: PropTypes.object.isRequired,\n  isLoading: PropTypes.bool.isRequired\n}\n\nexport default Pokemon; ","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Pokemon from './Pokemon';\nimport '../styles/components/pokemons.scss';\n\n\nconst Pokemons = (props) => {\n  const { pokemons, findPokemon, isLoading } = props;\n  const pokemonsFilter = pokemons.filter(myPokemon => myPokemon.name.toUpperCase().includes(findPokemon.toUpperCase()));\n  return (\n      <ul className=\"pokemons__list\">\n          {pokemonsFilter.map((pokemon) =>\n            <li key={`pokemon-${pokemon.name}`} >\n              <Link className=\"main__link\" to={`/detail/${pokemon.id}`}>\n                <Pokemon pokemon={pokemon} isLoading={isLoading}/>\n              </Link>\n            </li>\n          )}\n        </ul>\n  );\n}\n\nPokemons.propTypes = {\n  pokemons: PropTypes.arrayOf(PropTypes.object).isRequired,\n  findPokemon: PropTypes.string.isRequired\n}\n\nexport default Pokemons;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport PokemonTypesBackground from './PokemonTypesBackground';\nimport '../styles/components/pokemonDetail.scss';\n\nconst PokemonDetail = (props) => {\n  const { pokemon } = props;\n\n  if(Object.keys(pokemon).length) {\n    const { name, sprites, abilities, weight, height, types, id, evolves_from_species, gender_rate, egg_groups, habitat } = pokemon;\n\n    return(\n      <div className=\"pokemon-detail\">\n        <PokemonTypesBackground pokemonTypes={types}/>\n        <Link className=\"pokemon-detail__link\" to=\"/\">Volver</Link>\n        <div className=\"pokemon-detail__card\" >\n          <h2 className={`pokemon-detail__name pokemon-detail__title pokemon-detail__title--${types[0].type.name}`}>{name}</h2>\n          <div className=\"pokemon-detail__container\">\n            <ul className=\"pokemon-detail__types\">{types.map((type, index) => \n              <li className={`pokemon-detail__type pokemon-types__type--${type.type.name}`} key={index}>{type.type.name}</li>\n            )}\n            </ul>\n            <img className=\"pokemon-detail__image\" src={sprites.front_shiny} alt={name}/>\n            <p className=\"pokemon-detail__number\" >#{id}</p>\n          </div>\n          <div className=\"pokemon-detail__profile\">\n            <h3 className={`pokemon-detail__title pokemon-detail__title--${types[0].type.name}`}>profile</h3>\n            <dl className=\"pokemon-detail__container pokemon-detail__profile__list\">\n              <dt className=\"pokemon-detail__profile__term\">Weight:</dt>\n              <dd className=\"pokemon-detail__profile__definition\">{weight}</dd>\n              <dt className=\"pokemon-detail__profile__term\">Height:</dt>\n              <dd className=\"pokemon-detail__profile__definition\">{height}</dd>\n              <dt className=\"pokemon-detail__profile__term\">Egg groups:</dt>\n              <dd className=\"pokemon-detail__profile__definition\">\n                <ul className=\"pokemon-detail__definition__list\">\n                {egg_groups.map((eggGroup, index) => \n                  <li className=\"pokemon-detail__definition__element\" key={`egg-group-${index}`}>{eggGroup.name}</li>\n                )}\n                </ul>\n              </dd>\n              <dt className=\"pokemon-detail__profile__term\">Gender rate:</dt>\n              <dd className=\"pokemon-detail__profile__definition\">{gender_rate}</dd>\n              <dt className=\"pokemon-detail__profile__term\">Habitat:</dt>\n              <dd className=\"pokemon-detail__profile__definition\">{habitat.name}</dd>\n              <dt className=\"pokemon-detail__profile__term\">Abilities:</dt>\n              <dd className=\"pokemon-detail__profile__definition\">\n                <ul className=\"pokemon-detail__definition__list\">\n                {abilities.map((ability, index) => \n                  <li className=\"pokemon-detail__definition__element\" key={`ability-${index}`}>{ability.ability.name}</li>\n                )}\n                </ul>\n              </dd>\n            </dl>\n          </div>\n          {evolves_from_species \n            ? (<div className=\"pokemon-detail__evolution\">\n                  <h3 className={`pokemon-detail__title pokemon-detail__title--${types[0].type.name}`}>evolution</h3>\n                  <p className=\"pokemon-detail__container\">{evolves_from_species.name}</p>\n                </div>)\n            : ''}\n\n        </div>\n      </div>\n    )\n  } else {\n    return(\n      <React.Fragment>\n        <Link className=\"detail__link\" to=\"/\">Volver</Link>\n        <div>Ese personaje no existe</div>\n      </React.Fragment>\n    )\n  }\n}\n\nPokemonDetail.propTypes = {\n  pokemon: PropTypes.object.isRequired,\n  match: PropTypes.object.isRequired\n}\n\nexport default PokemonDetail;","import React from 'react';\nimport { Switch, Route, withRouter } from 'react-router-dom';\nimport { fetchPokemons } from './services/fetchPokemons';\nimport { fetchPokemon } from './services/fetchPokemon';\nimport Search from './components/Search';\nimport Pokemons from './components/Pokemons';\nimport PokemonDetail from './components/PokemonDetail';\nimport logo from './images/Pokemon-Logo.png';\nimport './styles/components/app.scss';\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      pokemons: [],\n      findPokemon: '',\n      isLoading: true,\n      pokemonDetail: {}\n    }\n\n    this.getPokemon = this.getPokemon.bind(this);\n  }\n  componentDidUpdate(prevProps) {\n    if (this.props.location.pathname !== prevProps.location.pathname) {\n      this.getPageInfo(this.props.location.pathname);\n    }\n  }\n\n  componentDidMount() {\n    this.getPageInfo(this.props.location.pathname);\n  }\n\n  getPageInfo(pathname) {\n    if(pathname === '/') {\n      fetchPokemons()\n      .then(pokemons => {\n        const pokemonsArray = pokemons.results.map(pokemon => {\n          //remove trailing slash from url\n          const urlCleaned = pokemon.url.slice(0, -1);\n          //find last slash position\n          const lastSlashPosition = urlCleaned.lastIndexOf('/');\n          //keep the rest of url after last slash position (pokemonId)\n          const pokemonId = pokemon.url.substring(lastSlashPosition + 1);\n          return fetchPokemon(pokemonId);\n        });\n        return Promise.all(pokemonsArray);\n      })\n      .then(pokemonsArray => {\n        this.setState({\n          pokemons: pokemonsArray,\n          isLoading: false\n        })\n      })\n    } else {\n      const positionPokeId = pathname.lastIndexOf('/') + 1\n      const pokemonId = pathname.substring(positionPokeId)\n      fetchPokemon(pokemonId)\n        .then(pokemon => {\n          this.setState({\n            pokemonDetail: pokemon\n          })\n        })\n    }\n  } \n\n  getPokemon(event) {\n    const findPokemon = event.currentTarget.value;\n    this.setState ({\n      findPokemon: findPokemon\n    })\n  }\n  \n  render() {\n    const { pokemons, findPokemon, isLoading, pokemonDetail } = this.state;\n    const { location } = this.props;\n\n    return(\n      <>\n        <header className={`header ${location.pathname !== '/' ? 'header--slim' : ''}`} >\n          <h1 className=\"header__title\" >Lista de Pokemons</h1>\n          <img className=\"header__logo\" src={logo} alt=\"logo pokemon\"/>\n        </header>\n        <main className=\"main\">\n          <Switch >\n            <Route exact path=\"/\" render={RouterProps => (\n              <div>\n                <Search match={RouterProps.match} getPokemon={this.getPokemon} />\n                <Pokemons match={RouterProps.match} pokemons={pokemons} findPokemon={findPokemon} isLoading={isLoading}/>\n              </div>\n             )}>\n            </Route>\n            <Route path=\"/detail/:pokemonId\" render={RouterProps => (\n              <PokemonDetail match={RouterProps.match} pokemon={pokemonDetail}/>\n            )}>\n            </Route>\n            \n          </Switch>\n        </main>\n      </>\n    );\n  }\n};\n\nexport default withRouter(props => <App {...props}/>);\n","const ENDPOINT = 'https://pokeapi.co/api/v2/pokemon?offset=0&limit=25';\n\nconst fetchPokemons = () => fetch(ENDPOINT).then(response => response.json());\n\nexport { fetchPokemons };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/components/index.scss';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(<HashRouter><App /></HashRouter>, document.getElementById('root'));\n"],"sourceRoot":""}